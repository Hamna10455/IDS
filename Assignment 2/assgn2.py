# -*- coding: utf-8 -*-
"""assgn2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tPjJhtQ6-0Nse5Ll6jzbtv9noJmmU5BF
"""

# 30 Sep 2023
# CSC461 – Assignment2 – Regular Expressions
# Hamna Ashraf
# sp20-bse-047

import re

#import Google Drive and mount the entire drive

from google.colab import drive
drive.mount('/content/drive')
file_path = '/content/drive/My Drive/example-text.txt'

with open(file_path, 'r') as file:
    text = file.read()

# 1. Extract list of all words
all_words = re.findall(r'\b\w+[\']?.\b', text)

# Printing the results
print("List of All Words:", all_words)

# 2. Extract list of all words starting with a capital letter
capital_words = re.findall(r'\b[A-Z][a-z]*\b', text)


# Printing the results
print("List of Capital Words:", capital_words)

# 3. Extract list of all words of length 5
five_letter_words = re.findall(r'\b\w{5}\b', text)

# Printing the results
print("List of Five-Letter Words:", five_letter_words)

# 4. Extract list of all words inside double quotes
quoted_words = re.findall(r'\"(.*?)\"', text)

# Printing the results
print("List of Quoted Words:", quoted_words)

# 5. Extract list of all vowels
vowels = re.findall(r'[aeiouAEIOU]', text)

# Printing the results
print("List of Vowels:", vowels)

# 6. Extract list of 3 letter words ending with letter ‘e’
three_letter_e_words = re.findall(r'\b\w{3}e\b', text)


# Printing the results
print("List of Three-Letter Words Ending with 'e':", three_letter_e_words)

# 7. Extract list of all words starting and ending with letter ‘b’
b_words = re.findall(r'\bb\w*b\b', text)

# Printing the results
print("List of Words Starting and Ending with 'b':", b_words)

# 8. Remove all the punctuation marks from the text
text_without_punctuation = re.sub(r'[^\w\s]', '', text)

# Printing the results
print("Text without Punctuation:", text_without_punctuation)

# 9. Replace all words ending 'n't' to their full form 'not'
text_with_not_expansion = re.sub(r'\b(\w+)n\'t\b', r'\1 not', text)

# Printing the results
print("Text with 'not' Expansion:", text_with_not_expansion)

# 10. Replace all the new lines with a single space
text_with_single_space_newlines = re.sub(r'\n', ' ', text)

# Printing the results
print("Text with Single Space Newlines:", text_with_single_space_newlines)